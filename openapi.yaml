openapi: 3.0.3
info:
  title: CityQuest API
  description: Dokumentation aller Schnittstellen
  version: 1.0.0
servers:
  - url: https
paths:
  /register:
    post:
      tags:
        - public
      description: Benutzer registriert sich
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Registrierungsdaten
              example:
                username: DanielPillwein
                password: ichbinreich10!
                email: daniel.pillwein@htl.rennweg.at
      responses:
        '201':
          content:
            application/json:
              example:
                user:
                  id: 10
                  name: DanielPillwein
                  email: daniel.pillwein@htl.rennweg.at
                emailVerified: false
          description: JSON des hinzugef端gten Benutzers
        '400':
          content: 
            application/json:
              example:
                error: Der Benutzername oder die Email existiert bereits
          description: Der Benutzername oder die Email existiert bereits
  /login:
    post:
      tags:
        - public
      description: Benutzer loggt sich ein.
      security:
        - {}
      requestBody:
        required: true
        description: Zugangsdaten
        content:
          application/json:
            schema:
              example:
                username: WizMarki
                password: stubsi10!
      responses:
        '200':
          content:
            application/json:
              example:
                sessionKey: Lu9Tc1Pdola+SOnfPUxEkoKYuQLdjmsMK89uxT+RrrVegf1xQOI6Mpv5IXrYX6CVsukFLhwGzNH/zLMsuoBSbQ==
              schema:
                type: String
                properties:
                  sessionKey:
                    type: string
          description: Erfolgreich eingeloggt. Gibt *sessionKey* zur端ck
        '400':
          content:
            application/json:
              example:
                error: Falscher Benutzername oder falsches Passwort
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Die Fehlermeldung
          description: Falscher Benutzername oder falsches Passwort
        '401':
          content:
            application/json:
              example:
                error: Die E-Mail-Adresse wurde noch nicht verifiziert
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Die Fehlermeldung
          description: Die E-Mail-Adresse wurde noch nicht verifiziert
  /users:
    get:
      tags:
        - auth
      description: Pr端ft ob der gesetzte API-Token des Benutzers g端ltig ist
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Benutzer erkannt
          content:
            application/json:
              example:
                id: 10
                name: Quantom
                email: Quantom@myemail.com
  /logout:
    post:
      tags:
        - auth
      description: Benutzer loggt sich aus
      security:
        - ApiKeyAuth: []
      responses:
        '204':
          description: User wurde abgemeldet
        '400':
          content:
            application/json:
              example:
                error: Es gibt keinen Benutzer mit diesem Token
          description: Es gibt keinen Benutzer mit diesem Token
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      bearerFormat: TOKEN
